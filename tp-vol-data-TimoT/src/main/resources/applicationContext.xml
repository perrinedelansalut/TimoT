<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<context:annotation-config/>
	
	<!-- Activation annotations et scan des classes du package formation.dao -->
	<context:component-scan base-package="vol.model.dao"/>

	<!-- Création d'une dataSource DBCP (Connection Pooling) -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/agence"/>
        <property name="username" value="postgres"/>
        <property name="password" value="admin"/>
        <property name="initialSize" value="1"/>
        <property name="maxActive" value="10"/>
    </bean>
    
    <!-- Création d'un entityManagerFactory local à partir de la dataSource     -->
    <bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="vol.model" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect" />
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
			</bean>
		</property>
	</bean>
	
	<!-- Création du transactionManager pour JPA avec entityManagerFactory	 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<!-- Activation des annotations @Transactionnal avec transactionManager	 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- Activation de la translation d'exception -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor">
	</bean>
	
	<!-- Hibernate configuration -->
	
<!-- 	<bean id="sessionFactory" -->
<!-- 		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> -->
<!-- 		<property name="dataSource" ref="dataSource" /> -->
<!-- 		<property name="packagesToScan" value="formation.model" /> -->
<!-- 		<property name="hibernateProperties"> -->
<!-- 			<props> -->
<!-- 				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop> -->
<!-- 				<prop key="hibernate.hbm2ddl.auto">update</prop> -->
<!-- 				<prop key="hibernate.show_sql">true</prop> -->
<!-- 			</props> -->
<!-- 		</property> -->
<!-- 	</bean> -->

<!-- 	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"> -->
<!-- 		<property name="sessionFactory" ref="sessionFactory" /> -->
<!-- 	</bean> -->



</beans>

